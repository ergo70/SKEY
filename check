#!/usr/bin/python
#
#ISC License
#
#Copyright (c) 2017, Ernst-Georg Schmid
#
#Permission to use, copy, modify, and/or distribute this software for any
#purpose with or without fee is hereby granted, provided that the above
#copyright notice and this permission notice appear in all copies.
#
#THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
#REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
#AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
#INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
#LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
#OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#PERFORMANCE OF THIS SOFTWARE.

# -*- coding: utf-8 -*-
"""
@author: ergo
"""

import sys
from mhash import HMAC, MHASH_RIPEMD128
from os import path, chmod

CONFIG = path.expanduser("~") + '/.skey'
base = 48

if(len(sys.argv) != 2):
    exit()

password = sys.argv[1].replace('-','')

with open(CONFIG, 'r') as last_seen:
    line = last_seen.readline()
    c = ord(line[0]) - base
    p = line[1:33]
    next_hash = line[33:65]
    
if c == 0:
    print 'List exhausted'
    print('FAIL')
    sys.exit()
    
if c < 10:
    print 'Only ' + str(c) + ' passwords left' 
    
password_hash = HMAC(MHASH_RIPEMD128, p , password).hexdigest()    

for n in xrange(1, 999999):
    password_hash = HMAC(MHASH_RIPEMD128, p , password_hash).hexdigest()

if next_hash == password_hash:
    c-=1
    chmod(CONFIG, 0200) 
    with open(CONFIG, 'w') as last_seen:
        last_seen.write(chr(base + c))   
        last_seen.write(p)
        last_seen.write(password)
    chmod(CONFIG, 0400)    
    print 'PASS'
else:
    print 'FAIL'        
